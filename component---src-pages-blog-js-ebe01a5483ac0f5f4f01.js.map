{"version":3,"sources":["webpack:///./src/styles/header.module.scss","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./src/images/duck.jpg","webpack:///./src/styles/layout.module.scss","webpack:///./src/pages/blog.js"],"names":["module","exports","Footer","site","useStaticQuery","siteMetadata","author","Layout","props","className","layoutStyles","container","content","children","Header","header","style","display","margin","title","to","borderRadius","width","borderColor","src","duck","navList","navItem","activeClassName","activeNavItem","BlogPage","edges","data","allMarkdownRemark","map","edge","node","fields","slug","frontmatter","date"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,OAAS,+BAA+B,MAAQ,8BAA8B,QAAU,iCAAiC,QAAU,iCAAiC,cAAgB,0C,uECmBvLC,EAjBA,WAAO,IACXC,EAAQC,YAAe,aAAvBD,KASP,OACI,gCACI,0CAAgBA,EAAKE,aAAaC,OAAlC,c,6CCGGC,IAZA,SAACC,GACZ,OACI,yBAAKC,UAAWC,IAAaC,WACzB,yBAAKF,UAAWC,IAAaE,SACzB,kBAAC,IAAD,MACCJ,EAAMK,UAEX,kBAAC,EAAD,S,kCCbZ,sEAuDeC,IAjDA,WAAO,IACXX,EAAQC,YAAe,cAAvBD,KAsBP,OACI,4BAAQM,UAAWM,UACf,yBAAKC,MARU,CACjBC,QAAS,OACTC,OAAQ,IAOF,4BAAI,kBAAC,IAAD,CAAMT,UAAWU,QAAOC,GAAG,IAAIjB,EAAKE,aAAac,QACrD,yBAAKH,MAhBE,CACfK,aAAc,MACdC,MAAO,OACPC,YAAa,SAaoBC,IAAKC,OAElC,6BACI,wBAAIhB,UAAWiB,WACX,4BACI,kBAAC,IAAD,CAAMjB,UAAWkB,UAASC,gBAAiBC,gBAAgBT,GAAG,KAA9D,SAEJ,4BACI,kBAAC,IAAD,CAAMX,UAAWkB,UAASC,gBAAiBC,gBAAgBT,GAAG,UAA9D,UAEJ,4BACI,kBAAC,IAAD,CAAMX,UAAWkB,UAASC,gBAAiBC,gBAAgBT,GAAG,SAA9D,SAEJ,4BACI,kBAAC,IAAD,CAAMX,UAAWkB,UAASC,gBAAiBC,gBAAgBT,GAAG,YAA9D,iB,qBC/CxBpB,EAAOC,QAAU,IAA0B,oD,qBCC3CD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,QAAU,kC,2DCD1E,oEA2Be6B,UAtBE,SAAC,GAAY,IAEnBC,EAFkB,EAAVC,KACRC,kBACAF,MACP,OACI,kBAAC,IAAD,KACI,oCACA,4BAEQA,EAAMG,KAAK,SAACC,GACR,OACI,4BACI,4BAAI,kBAAC,IAAD,CAAMf,GAAE,GAAKe,EAAKC,KAAKC,OAAOC,MAASH,EAAKC,KAAKG,YAAYpB,QACjE,2BAAIgB,EAAKC,KAAKG,YAAYC","file":"component---src-pages-blog-js-ebe01a5483ac0f5f4f01.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header-module--header--1C-DW\",\"title\":\"header-module--title--3_b9J\",\"navList\":\"header-module--nav-list--3az7f\",\"navItem\":\"header-module--nav-item--1kPYv\",\"activeNavItem\":\"header-module--active-nav-item--18LVz\"};","import React from 'react';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\n\nconst Footer = () => {\n    const {site} = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    author\n                }\n            }\n        }\n    `)\n    return (\n        <footer>\n            <p> Created by {site.siteMetadata.author}, Â© 2021</p>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport Footer from \"../components/footer\"\nimport Header from \"../components/header\"\nimport '../styles/index.scss'\nimport layoutStyles from \"../styles/layout.module.scss\"\n\nconst Layout = (props) => {\n    return (\n        <div className={layoutStyles.container}>\n            <div className={layoutStyles.content}>\n                <Header></Header>\n                {props.children} \n            </div>\n            <Footer></Footer>\n        </div>\n    );\n};\n\nexport default Layout;","import { graphql, Link, useStaticQuery } from 'gatsby';\nimport React from 'react';\n\nimport {title, navItem, header, activeNavItem, navList} from '../styles/header.module.scss'\nimport duck from \"../images/duck.jpg\";\n\nconst Header = () => {\n    const {site} = useStaticQuery(graphql`\n        query {\n            site {\n                siteMetadata {\n                    title\n                }\n            }\n        }\n    `)\n\n    const imageStyle = {\n        borderRadius: \"50%\", \n        width: \"50px\",\n        borderColor: \"black\",\n    }\n\n    const containerStyle = {\n          display: \"flex\",\n          margin: 0,\n    }\n\n\n    return (\n        <header className={header}>\n            <div style={containerStyle}>\n                <h1><Link className={title} to=\"\">{site.siteMetadata.title}</Link></h1>\n                <img style={imageStyle}  src={duck}></img>\n            </div>\n            <nav>\n                <ul className={navList}>\n                    <li>\n                        <Link className={navItem} activeClassName={activeNavItem}  to=\"/\">Home</Link>\n                    </li>\n                    <li>\n                        <Link className={navItem} activeClassName={activeNavItem}  to=\"/about\">About</Link>\n                    </li>\n                    <li>\n                        <Link className={navItem} activeClassName={activeNavItem}  to=\"/blog\">Blog</Link>\n                    </li>\n                    <li>\n                        <Link className={navItem} activeClassName={activeNavItem}  to=\"/contact\">Contact</Link>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n};\n\nexport default Header;","module.exports = __webpack_public_path__ + \"static/duck-03c503b1d028551326dcdc3cae75c70f.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout-module--container--28I70\",\"content\":\"layout-module--content--dHzMz\"};","import { graphql, useStaticQuery, Link } from 'gatsby';\nimport React from 'react';\nimport Header from \"../components/header\"\nimport Layout from '../components/layout';\n\nconst BlogPage = ({data}) => {\n    const {allMarkdownRemark} = data;\n    const {edges} = allMarkdownRemark;\n    return (\n        <Layout>\n            <h1>Blog</h1>\n            <ol>\n                {\n                    edges.map( (edge) => {\n                        return (\n                            <li>\n                                <h2><Link to={`${edge.node.fields.slug}`}>{edge.node.frontmatter.title}</Link></h2>\n                                <p>{edge.node.frontmatter.date}</p>\n                            </li>\n                        )\n                    })\n                }\n            </ol>\n        </Layout>\n    );\n};\n\nexport default BlogPage;\n\nexport const query = graphql`\n        query {\n            allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/(posts)/\"  }}) {\n                edges {\n                    node {\n                        frontmatter {\n                            title\n                            date\n                        }\n                        fields {\n                            slug\n                        }\n                    }\n                }\n            }\n        }\n`"],"sourceRoot":""}